import { Vertex, Mesh, CompiledMesh } from "../glPort/Mesh";
import { Graphics } from "../glPort/Graphics";

let triangleData: [Vertex, Vertex, Vertex][] = [
	[
	new Vertex([-0.0383,-0.0383,0.9801],[0.4911,0.3568,0.7947],[1.0,0.0,0.0]),
	new Vertex([0.8383,-0.0383,0.4383],[0.4911,0.3568,0.7947],[1.0,0.0,0.0]),
	new Vertex([0.2326,0.7954,0.4383],[0.4911,0.3568,0.7947],[1.0,0.0,0.0]),
	],
	[
	new Vertex([-0.0383,-0.0383,0.9801],[-0.1876,0.5774,0.7947],[1.0,0.0,0.0]),
	new Vertex([0.2326,0.7954,0.4383],[-0.1876,0.5774,0.7947],[1.0,0.0,0.0]),
	new Vertex([-0.7475,0.477,0.4383],[-0.1876,0.5774,0.7947],[1.0,0.0,0.0]),
	],
	[
	new Vertex([-0.0383,-0.0383,0.9801],[-0.6071,-0.0,0.7947],[1.0,0.0,0.0]),
	new Vertex([-0.7475,0.477,0.4383],[-0.6071,-0.0,0.7947],[1.0,0.0,0.0]),
	new Vertex([-0.7475,-0.5536,0.4383],[-0.6071,-0.0,0.7947],[1.0,0.0,0.0]),
	],
	[
	new Vertex([-0.0383,-0.0383,0.9801],[-0.1876,-0.5774,0.7947],[1.0,0.0,0.0]),
	new Vertex([-0.7475,-0.5536,0.4383],[-0.1876,-0.5774,0.7947],[1.0,0.0,0.0]),
	new Vertex([0.2326,-0.872,0.4383],[-0.1876,-0.5774,0.7947],[1.0,0.0,0.0]),
	],
	[
	new Vertex([-0.0383,-0.0383,0.9801],[0.4911,-0.3568,0.7947],[1.0,0.0,0.0]),
	new Vertex([0.2326,-0.872,0.4383],[0.4911,-0.3568,0.7947],[1.0,0.0,0.0]),
	new Vertex([0.8383,-0.0383,0.4383],[0.4911,-0.3568,0.7947],[1.0,0.0,0.0]),
	],
	[
	new Vertex([0.8383,-0.0383,0.4383],[0.9822,0.0,-0.1876],[1.0,0.0,0.0]),
	new Vertex([0.6709,-0.5536,-0.4383],[0.9822,0.0,-0.1876],[1.0,0.0,0.0]),
	new Vertex([0.6709,0.477,-0.4383],[0.9822,0.0,-0.1876],[1.0,0.0,0.0]),
	],
	[
	new Vertex([0.2326,0.7954,0.4383],[0.3035,0.9342,-0.1876],[1.0,0.0,0.0]),
	new Vertex([0.6709,0.477,-0.4383],[0.3035,0.9342,-0.1876],[1.0,0.0,0.0]),
	new Vertex([-0.3092,0.7954,-0.4383],[0.3035,0.9342,-0.1876],[1.0,0.0,0.0]),
	],
	[
	new Vertex([-0.7475,0.477,0.4383],[-0.7947,0.5774,-0.1876],[1.0,0.0,0.0]),
	new Vertex([-0.3092,0.7954,-0.4383],[-0.7947,0.5774,-0.1876],[1.0,0.0,0.0]),
	new Vertex([-0.9149,-0.0383,-0.4383],[-0.7947,0.5774,-0.1876],[1.0,0.0,0.0]),
	],
	[
	new Vertex([-0.7475,-0.5536,0.4383],[-0.7947,-0.5774,-0.1876],[1.0,0.0,0.0]),
	new Vertex([-0.9149,-0.0383,-0.4383],[-0.7947,-0.5774,-0.1876],[1.0,0.0,0.0]),
	new Vertex([-0.3092,-0.872,-0.4383],[-0.7947,-0.5774,-0.1876],[1.0,0.0,0.0]),
	],
	[
	new Vertex([0.2326,-0.872,0.4383],[0.3035,-0.9342,-0.1876],[1.0,0.0,0.0]),
	new Vertex([-0.3092,-0.872,-0.4383],[0.3035,-0.9342,-0.1876],[1.0,0.0,0.0]),
	new Vertex([0.6709,-0.5536,-0.4383],[0.3035,-0.9342,-0.1876],[1.0,0.0,0.0]),
	],
	[
	new Vertex([0.6709,0.477,-0.4383],[0.7947,0.5774,0.1876],[1.0,0.0,0.0]),
	new Vertex([0.2326,0.7954,0.4383],[0.7947,0.5774,0.1876],[1.0,0.0,0.0]),
	new Vertex([0.8383,-0.0383,0.4383],[0.7947,0.5774,0.1876],[1.0,0.0,0.0]),
	],
	[
	new Vertex([-0.3092,0.7954,-0.4383],[-0.3035,0.9342,0.1876],[1.0,0.0,0.0]),
	new Vertex([-0.7475,0.477,0.4383],[-0.3035,0.9342,0.1876],[1.0,0.0,0.0]),
	new Vertex([0.2326,0.7954,0.4383],[-0.3035,0.9342,0.1876],[1.0,0.0,0.0]),
	],
	[
	new Vertex([-0.9149,-0.0383,-0.4383],[-0.9822,-0.0,0.1876],[1.0,0.0,0.0]),
	new Vertex([-0.7475,-0.5536,0.4383],[-0.9822,-0.0,0.1876],[1.0,0.0,0.0]),
	new Vertex([-0.7475,0.477,0.4383],[-0.9822,-0.0,0.1876],[1.0,0.0,0.0]),
	],
	[
	new Vertex([-0.3092,-0.872,-0.4383],[-0.3035,-0.9342,0.1876],[1.0,0.0,0.0]),
	new Vertex([0.2326,-0.872,0.4383],[-0.3035,-0.9342,0.1876],[1.0,0.0,0.0]),
	new Vertex([-0.7475,-0.5536,0.4383],[-0.3035,-0.9342,0.1876],[1.0,0.0,0.0]),
	],
	[
	new Vertex([0.6709,-0.5536,-0.4383],[0.7947,-0.5774,0.1876],[1.0,0.0,0.0]),
	new Vertex([0.8383,-0.0383,0.4383],[0.7947,-0.5774,0.1876],[1.0,0.0,0.0]),
	new Vertex([0.2326,-0.872,0.4383],[0.7947,-0.5774,0.1876],[1.0,0.0,0.0]),
	],
	[
	new Vertex([-0.0383,-0.0383,-0.9801],[0.1876,0.5774,-0.7947],[1.0,0.0,0.0]),
	new Vertex([-0.3092,0.7954,-0.4383],[0.1876,0.5774,-0.7947],[1.0,0.0,0.0]),
	new Vertex([0.6709,0.477,-0.4383],[0.1876,0.5774,-0.7947],[1.0,0.0,0.0]),
	],
	[
	new Vertex([-0.0383,-0.0383,-0.9801],[-0.4911,0.3568,-0.7947],[1.0,0.0,0.0]),
	new Vertex([-0.9149,-0.0383,-0.4383],[-0.4911,0.3568,-0.7947],[1.0,0.0,0.0]),
	new Vertex([-0.3092,0.7954,-0.4383],[-0.4911,0.3568,-0.7947],[1.0,0.0,0.0]),
	],
	[
	new Vertex([-0.0383,-0.0383,-0.9801],[-0.4911,-0.3568,-0.7947],[1.0,0.0,0.0]),
	new Vertex([-0.3092,-0.872,-0.4383],[-0.4911,-0.3568,-0.7947],[1.0,0.0,0.0]),
	new Vertex([-0.9149,-0.0383,-0.4383],[-0.4911,-0.3568,-0.7947],[1.0,0.0,0.0]),
	],
	[
	new Vertex([-0.0383,-0.0383,-0.9801],[0.1876,-0.5774,-0.7947],[1.0,0.0,0.0]),
	new Vertex([0.6709,-0.5536,-0.4383],[0.1876,-0.5774,-0.7947],[1.0,0.0,0.0]),
	new Vertex([-0.3092,-0.872,-0.4383],[0.1876,-0.5774,-0.7947],[1.0,0.0,0.0]),
	],
	[
	new Vertex([-0.0383,-0.0383,-0.9801],[0.6071,0.0,-0.7947],[1.0,0.0,0.0]),
	new Vertex([0.6709,0.477,-0.4383],[0.6071,0.0,-0.7947],[1.0,0.0,0.0]),
	new Vertex([0.6709,-0.5536,-0.4383],[0.6071,0.0,-0.7947],[1.0,0.0,0.0]),
	],
];

function build(graphics: Graphics): CompiledMesh {
	return new Mesh(triangleData).compile(graphics.gl, graphics.shader);
}

export { build };